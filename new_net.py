network = tl.layers.InputLayer(x, name='input_layer')
network = tl.layers.ReshapeLayer(network, 
                                 shape=(-1, windowlength, 1, 1))
network = tl.layers.Conv2dLayer(network,  
                                act = tf.nn.relu, 
                                shape = [10, 1, 1, 30],
                                strides=[1, 1, 1, 1],  
                                padding='SAME', 
                                name = 'cnn1')
network = tl.layers.Conv2dLayer(network,
                                act = tf.nn.relu,
                                shape = [8, 1, 30, 30],
                                strides=[1, 1, 1, 1],
                                padding='SAME',
                                name = 'cnn2')
network = tl.layers.Conv2dLayer(network,
                                act = tf.nn.relu,
                                shape = [6, 1, 30, 40],
                                strides=[1, 1, 1, 1],
                                padding='SAME',
                                name = 'cnn3')
network = tl.layers.Conv2dLayer(network,
                                act = tf.nn.relu,
                                shape = [5, 1, 40, 50],
                                strides=[1, 1, 1, 1],
                                padding='SAME',
                                name = 'cnn4')
network = tl.layers.Conv2dLayer(network,
                                act = tf.nn.relu,
                                shape = [5, 1, 50, 50],
                                strides=[1, 1, 1, 1],
                                padding='SAME',
                                name = 'cnn5')
# network = tl.layers.Conv2dLayer(network,
#                                 act = tf.nn.relu,
#                                 shape = [5, 1, 50, 60],
#                                 strides=[1, 1, 1, 1],
#                                 padding='SAME',
#                                 name = 'cnn6')
network = tl.layers.FlattenLayer(network,
                                 name='flatten')
network = tl.layers.DenseLayer(network, 
                               n_units=1024, 
                               act = tf.nn.relu, 
                               name='dense2')
network = tl.layers.DenseLayer(network, 
                               n_units=params_appliance[application]['windowlength'],
                               act =tf.identity,
                               name='output_layer')
